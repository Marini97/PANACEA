smg

player attacker
	attacker, [wait1],
	[starta1], [enda1], [starta2], [enda2], [starta4], [enda4], [starta5], [enda5], [starta6], [enda6], [starta7], [enda7], [starta8], [enda8], [starta9], [enda9], [starta10], [enda10], [starta11], [enda11]
endplayer
player defender
	defender, [wait2],
	[startc1], [endc1], [startc2], [endc2], [startc3], [endc3], [startc4], [endc4], [startc6], [endc6], [startc7], [endc7], [startc8], [endc8]
endplayer

global sched : [1..2];

global root : [0..1];
label "terminate" = root=1;

global A_8 : [0..2];
global A_7 : [0..2];
global A_1 : [0..2];
global A_2 : [0..2];
global A_4 : [0..2];
global A_6 : [0..2];
global A_3 : [1..2];

module attacker

	progressa8 : bool;
	progressa2 : bool;
	progressa9 : bool;
	progressa7 : bool;
	progressa6 : bool;
	progressa1 : bool;
	progressa11 : bool;
	progressa10 : bool;
	progressa5 : bool;
	progressa4 : bool;

	time1 : [-1..3];
	[wait1] sched=1 & time1>0 -> (sched'=2) & (time1'=time1-1);

	[starta1] sched=1 & time1<0 & !progressa1 & !root=1 & root=0 & (A_1=1) -> (sched'=2) & (time1'=2) & (progressa1'=true);
	[enda1] sched=1 & time1=0 & progressa1 & !root=1 & root=0 & (A_1=1) -> (time1'=time1-1) & (progressa1'=false) & (root'=1);
	[faila1] sched=1 & time1=0 & progressa1 & !root=1 & (!root=0  | !A_1=1) -> (time1'=time1-1) & (progressa1'=false);

	[starta2] sched=1 & time1<0 & !progressa2 & !root=1 & root=0 & (A_2=1) -> (sched'=2) & (time1'=3) & (progressa2'=true);
	[enda2] sched=1 & time1=0 & progressa2 & !root=1 & root=0 & (A_2=1) -> (time1'=time1-1) & (progressa2'=false) & (root'=1);
	[faila2] sched=1 & time1=0 & progressa2 & !root=1 & (!root=0  | !A_2=1) -> (time1'=time1-1) & (progressa2'=false);

	[starta4] sched=1 & time1<0 & !progressa4 & !root=1 & A_1=0 & (A_4=1 & A_3=1) -> (sched'=2) & (time1'=1) & (progressa4'=true);
	[enda4] sched=1 & time1=0 & progressa4 & !root=1 & A_1=0 & (A_4=1 & A_3=1) -> (time1'=time1-1) & (progressa4'=false) & (A_1'=1);
	[faila4] sched=1 & time1=0 & progressa4 & !root=1 & (!A_1=0  | !A_4=1 | !A_3=1) -> (time1'=time1-1) & (progressa4'=false);

	[starta5] sched=1 & time1<0 & !progressa5 & !root=1 & A_2=0 -> (sched'=2) & (time1'=2) & (progressa5'=true);
	[enda5] sched=1 & time1=0 & progressa5 & !root=1 & A_2=0 -> (time1'=time1-1) & (progressa5'=false) & (A_2'=1);
	[faila5] sched=1 & time1=0 & progressa5 & !root=1 & (!A_2=0 ) -> (time1'=time1-1) & (progressa5'=false);

	[starta6] sched=1 & time1<0 & !progressa6 & !root=1 & A_4=0 & (A_6=1) -> (sched'=2) & (time1'=3) & (progressa6'=true);
	[enda6] sched=1 & time1=0 & progressa6 & !root=1 & A_4=0 & (A_6=1) -> (time1'=time1-1) & (progressa6'=false) & (A_4'=1);
	[faila6] sched=1 & time1=0 & progressa6 & !root=1 & (!A_4=0  | !A_6=1) -> (time1'=time1-1) & (progressa6'=false);

	[starta7] sched=1 & time1<0 & !progressa7 & !root=1 & A_4=0 & (A_7=1) -> (sched'=2) & (time1'=1) & (progressa7'=true);
	[enda7] sched=1 & time1=0 & progressa7 & !root=1 & A_4=0 & (A_7=1) -> (time1'=time1-1) & (progressa7'=false) & (A_4'=1);
	[faila7] sched=1 & time1=0 & progressa7 & !root=1 & (!A_4=0  | !A_7=1) -> (time1'=time1-1) & (progressa7'=false);

	[starta8] sched=1 & time1<0 & !progressa8 & !root=1 & A_4=0 & (A_8=1) -> (sched'=2) & (time1'=2) & (progressa8'=true);
	[enda8] sched=1 & time1=0 & progressa8 & !root=1 & A_4=0 & (A_8=1) -> (time1'=time1-1) & (progressa8'=false) & (A_4'=1);
	[faila8] sched=1 & time1=0 & progressa8 & !root=1 & (!A_4=0  | !A_8=1) -> (time1'=time1-1) & (progressa8'=false);

	[starta9] sched=1 & time1<0 & !progressa9 & !root=1 & A_6=0 -> (sched'=2) & (time1'=1) & (progressa9'=true);
	[enda9] sched=1 & time1=0 & progressa9 & !root=1 & A_6=0 -> (time1'=time1-1) & (progressa9'=false) & (A_6'=1);
	[faila9] sched=1 & time1=0 & progressa9 & !root=1 & (!A_6=0 ) -> (time1'=time1-1) & (progressa9'=false);

	[starta10] sched=1 & time1<0 & !progressa10 & !root=1 & A_7=0 -> (sched'=2) & (time1'=1) & (progressa10'=true);
	[enda10] sched=1 & time1=0 & progressa10 & !root=1 & A_7=0 -> (time1'=time1-1) & (progressa10'=false) & (A_7'=1);
	[faila10] sched=1 & time1=0 & progressa10 & !root=1 & (!A_7=0 ) -> (time1'=time1-1) & (progressa10'=false);

	[starta11] sched=1 & time1<0 & !progressa11 & !root=1 & A_8=0 -> (sched'=2) & (time1'=1) & (progressa11'=true);
	[enda11] sched=1 & time1=0 & progressa11 & !root=1 & A_8=0 -> (time1'=time1-1) & (progressa11'=false) & (A_8'=1);
	[faila11] sched=1 & time1=0 & progressa11 & !root=1 & (!A_8=0 ) -> (time1'=time1-1) & (progressa11'=false);

endmodule

module defender


	progressc4 : bool;
	progressc2 : bool;
	progressc8 : bool;
	progressc1 : bool;
	progressc3 : bool;
	progressc6 : bool;
	progressc7 : bool;

	time2 : [-1..3];
	[wait2] sched=2 & time2>0 -> (sched'=1) & (time2'=time2-1);

	[startc1] sched=2 & time2<0 & !progressc1 & !root=1 & !A_1=2 -> (sched'=1) & (time2'=2) & (progressc1'=true);
	[endc1] sched=2 & time2=0 & progressc1 & !root=1 & !A_1=2 -> (time2'=time2-1) & (progressc1'=false) & (A_1'=2);

	[startc2] sched=2 & time2<0 & !progressc2 & !root=1 & !A_2=2 -> (sched'=1) & (time2'=2) & (progressc2'=true);
	[endc2] sched=2 & time2=0 & progressc2 & !root=1 & !A_2=2 -> (time2'=time2-1) & (progressc2'=false) & (A_2'=2);

	[startc3] sched=2 & time2<0 & !progressc3 & !root=1 & !A_3=2 -> (sched'=1) & (time2'=2) & (progressc3'=true);
	[endc3] sched=2 & time2=0 & progressc3 & !root=1 & !A_3=2 -> (time2'=time2-1) & (progressc3'=false) & (A_3'=2);

	[startc4] sched=2 & time2<0 & !progressc4 & !root=1 & !A_4=2 -> (sched'=1) & (time2'=3) & (progressc4'=true);
	[endc4] sched=2 & time2=0 & progressc4 & !root=1 & !A_4=2 -> (time2'=time2-1) & (progressc4'=false) & (A_4'=2);

	[startc6] sched=2 & time2<0 & !progressc6 & !root=1 & !A_6=2 -> (sched'=1) & (time2'=2) & (progressc6'=true);
	[endc6] sched=2 & time2=0 & progressc6 & !root=1 & !A_6=2 -> (time2'=time2-1) & (progressc6'=false) & (A_6'=2);

	[startc7] sched=2 & time2<0 & !progressc7 & !root=1 & !A_7=2 -> (sched'=1) & (time2'=2) & (progressc7'=true);
	[endc7] sched=2 & time2=0 & progressc7 & !root=1 & !A_7=2 -> (time2'=time2-1) & (progressc7'=false) & (A_7'=2);

	[startc8] sched=2 & time2<0 & !progressc8 & !root=1 & !A_8=2 -> (sched'=1) & (time2'=1) & (progressc8'=true);
	[endc8] sched=2 & time2=0 & progressc8 & !root=1 & !A_8=2 -> (time2'=time2-1) & (progressc8'=false) & (A_8'=2);

endmodule

rewards "attacker"

	[starta1] true : 50;
	[starta2] true : 500;
	[starta4] true : 50;
	[starta5] true : 500;
	[starta6] true : 100;
	[starta7] true : 30;
	[starta8] true : 10;
	[starta9] true : 100;
	[starta10] true : 30;
	[starta11] true : 10;

endrewards

rewards "defender"

	[enda1] true : 500;
	[enda2] true : 5000;
	[startc1] true : 100;
	[startc2] true : 500;
	[startc3] true : 70;
	[startc4] true : 50;
	[startc6] true : 30;
	[startc7] true : 40;
	[startc8] true : 20;

endrewards