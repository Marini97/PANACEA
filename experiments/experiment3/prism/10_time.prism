smg

player attacker
	attacker, [wait1],
	[starta62], [enda62], [starta72], [enda72], [starta82], [enda82], [starta92], [enda92], [starta102], [enda102], [starta112], [enda112]
endplayer
player defender
	defender, [wait2],
	[startc62], [endc62], [startc72], [endc72], [startc82], [endc82]
endplayer

global sched : [1..2];

global A_6 : [0..1];
label "terminate" = A_6=1;

global A_62 : [0..2];
global A_82 : [0..2];
global A_72 : [0..2];

module attacker

	progressa72 : bool;
	progressa62 : bool;
	progressa92 : bool;
	progressa82 : bool;
	progressa102 : bool;
	progressa112 : bool;

	time1 : [-1..3];
	[wait1] sched=1 & time1>0 -> (sched'=2) & (time1'=time1-1);

	[starta62] sched=1 & time1<0 & !progressa62 & !A_6=1 & A_6=0 & (A_62=1) -> (sched'=2) & (time1'=3) & (progressa62'=true);
	[enda62] sched=1 & time1=0 & progressa62 & !A_6=1 & A_6=0 & (A_62=1) -> (time1'=time1-1) & (progressa62'=false) & (A_6'=1);
	[faila62] sched=1 & time1=0 & progressa62 & !A_6=1 & (!A_6=0  | !A_62=1) -> (time1'=time1-1) & (progressa62'=false);

	[starta72] sched=1 & time1<0 & !progressa72 & !A_6=1 & A_6=0 & (A_72=1) -> (sched'=2) & (time1'=1) & (progressa72'=true);
	[enda72] sched=1 & time1=0 & progressa72 & !A_6=1 & A_6=0 & (A_72=1) -> (time1'=time1-1) & (progressa72'=false) & (A_6'=1);
	[faila72] sched=1 & time1=0 & progressa72 & !A_6=1 & (!A_6=0  | !A_72=1) -> (time1'=time1-1) & (progressa72'=false);

	[starta82] sched=1 & time1<0 & !progressa82 & !A_6=1 & A_6=0 & (A_82=1) -> (sched'=2) & (time1'=2) & (progressa82'=true);
	[enda82] sched=1 & time1=0 & progressa82 & !A_6=1 & A_6=0 & (A_82=1) -> (time1'=time1-1) & (progressa82'=false) & (A_6'=1);
	[faila82] sched=1 & time1=0 & progressa82 & !A_6=1 & (!A_6=0  | !A_82=1) -> (time1'=time1-1) & (progressa82'=false);

	[starta92] sched=1 & time1<0 & !progressa92 & !A_6=1 & A_62=0 -> (sched'=2) & (time1'=1) & (progressa92'=true);
	[enda92] sched=1 & time1=0 & progressa92 & !A_6=1 & A_62=0 -> (time1'=time1-1) & (progressa92'=false) & (A_62'=1);
	[faila92] sched=1 & time1=0 & progressa92 & !A_6=1 & (!A_62=0 ) -> (time1'=time1-1) & (progressa92'=false);

	[starta102] sched=1 & time1<0 & !progressa102 & !A_6=1 & A_72=0 -> (sched'=2) & (time1'=1) & (progressa102'=true);
	[enda102] sched=1 & time1=0 & progressa102 & !A_6=1 & A_72=0 -> (time1'=time1-1) & (progressa102'=false) & (A_72'=1);
	[faila102] sched=1 & time1=0 & progressa102 & !A_6=1 & (!A_72=0 ) -> (time1'=time1-1) & (progressa102'=false);

	[starta112] sched=1 & time1<0 & !progressa112 & !A_6=1 & A_82=0 -> (sched'=2) & (time1'=1) & (progressa112'=true);
	[enda112] sched=1 & time1=0 & progressa112 & !A_6=1 & A_82=0 -> (time1'=time1-1) & (progressa112'=false) & (A_82'=1);
	[faila112] sched=1 & time1=0 & progressa112 & !A_6=1 & (!A_82=0 ) -> (time1'=time1-1) & (progressa112'=false);

endmodule

module defender


	progressc82 : bool;
	progressc62 : bool;
	progressc72 : bool;

	time2 : [-1..2];
	[wait2] sched=2 & time2>0 -> (sched'=1) & (time2'=time2-1);

	[startc62] sched=2 & time2<0 & !progressc62 & !A_6=1 & !A_62=2 -> (sched'=1) & (time2'=2) & (progressc62'=true);
	[endc62] sched=2 & time2=0 & progressc62 & !A_6=1 & !A_62=2 -> (time2'=time2-1) & (progressc62'=false) & (A_62'=2);

	[startc72] sched=2 & time2<0 & !progressc72 & !A_6=1 & !A_72=2 -> (sched'=1) & (time2'=2) & (progressc72'=true);
	[endc72] sched=2 & time2=0 & progressc72 & !A_6=1 & !A_72=2 -> (time2'=time2-1) & (progressc72'=false) & (A_72'=2);

	[startc82] sched=2 & time2<0 & !progressc82 & !A_6=1 & !A_82=2 -> (sched'=1) & (time2'=1) & (progressc82'=true);
	[endc82] sched=2 & time2=0 & progressc82 & !A_6=1 & !A_82=2 -> (time2'=time2-1) & (progressc82'=false) & (A_82'=2);

endmodule

rewards "attacker"

	[starta62] true : 100;
	[starta72] true : 30;
	[starta82] true : 10;
	[starta92] true : 100;
	[starta102] true : 30;
	[starta112] true : 10;

endrewards

rewards "defender"

	[enda82] true : 100;
	[enda62] true : 1000;
	[enda72] true : 300;
	[startc62] true : 30;
	[startc72] true : 40;
	[startc82] true : 20;

endrewards